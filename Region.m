% zones weightage and geography
classdef Region
    
    properties
        Continents;
        ContinentsHosts;
        UserDensity;
        HostDensity;
        LatLong;
        TrafficMatrix;
        Flow;   
        HourlyActivity;
        ZoneId;
    end
    
    methods        
       
        % Constructor
        function obj = Zones()
            obj.ContinentsHosts = [436745577, 727848547, 2525033874, 371127426, 566138772, 28917600].*1000; % 2020
            
            obj.Continents = [
                1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3
                1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3
                1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3
                1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 3 3
                1 1 1 1 1 1 1 1 1 1 5 5 5 5 5 5 3 3 3 3 3 3 3 3
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 3 3 3 3 3 3 3 3
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
                4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6
            ];
            
            obj.UserDensity = [
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 32 16 16 16 16 16 0 1.6 1.6 1.6 1.6 16 32 16 6.4 6.4 16 16 16 16 16 16 6.4
                0 16 6.4 32 95 95 95 95 6.4 1.6 1.6 191 239 95 95 95 95 95 32 32 32 0 0 0
                1.6 0 1.6 16 239 95 32 6.4 1.6 1.6 1.6 318 318 318 32 239 191 191 239 239 95 95 1.6 1.6
                0 1.6 0 0 16 95 16 1.6 0 0 0 191 191 191 239 239 239 239 239 191 1.6 0 0 0
                0 0 0 0 0 0 16 95 16 0 0 16 95 16 32 6.4 1.6 32 191 95 95 0 0 0
                0 0 0 0 0 0 16 191 239 95 0 0 6.4 32 95 0 0 0 0 32 32 191 0 0
                0 0 0 0 0 0 0 95 95 32 0 0 6.4 191 16 6.4 0 0 0 16 32 32 6.4 0
                0 0 0 0 0 0 0 191 6.4 0 0 0 0 16 0 0 0 0 0 0 6.4 16 0 0
                0 0 0 0 0 0 0 6.4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
            ].*1000000;       
            
            obj.HostDensity = zeros(size(obj.UserDensity));
            for c = 1 : max(obj.Continents(:))    
                obj.HostDensity(find(obj.Continents == c)) = (obj.UserDensity(find(obj.Continents == c))...
                    ./sum(obj.UserDensity(find(obj.Continents == c)))).*obj.ContinentsHosts(c);    
            end
            
            obj.LatLong = {
            [82.5 -172.5]	[82.5 -157.5]	[82.5 -142.5]	[82.5 -127.5]	[82.5 -112.5]	[82.5 -97.5]	[82.5 -82.5]	[82.5 -67.5]	[82.5 -52.5]	[82.5 -37.5]	[82.5 -22.5]	[82.5 -7.50]	[82.5 7.50]		[82.5 22.5]		[82.5 37.5]		[82.5 52.5]		[82.5 67.5]		[82.5 82.5]		[82.5 97.5]		[82.5 112.5]	[82.5 127.5]	[82.5 142.5]	[82.5 157.5]	[82.5 172.5];
            [67.5 -172.5]	[67.5 -157.5]	[67.5 -142.5]	[67.5 -127.5]	[67.5 -112.5]	[67.5 -97.5]	[67.5 -82.5]	[67.5 -67.5]	[67.5 -52.5]	[67.5 -37.5]	[67.5 -22.5]	[67.5 -7.50]	[67.5 7.50]		[67.5 22.5]		[67.5 37.5]		[67.5 52.5]		[67.5 67.5]		[67.5 82.5]		[67.5 97.5]		[67.5 112.5]	[67.5 127.5]	[67.5 142.5]	[67.5 157.5]	[67.5 172.5];
            [52.5 -172.5]	[52.5 -157.5]	[52.5 -142.5]	[52.5 -127.5]	[52.5 -112.5]	[52.5 -97.5]	[52.5 -82.5]	[52.5 -67.5]	[52.5 -52.5]	[52.5 -37.5]	[52.5 -22.5]	[52.5 -7.50]	[52.5 7.50]		[52.5 22.5]		[52.5 37.5]		[52.5 52.5]		[52.5 67.5]		[52.5 82.5]		[52.5 97.5]		[52.5 112.5]	[52.5 127.5]	[52.5 142.5]	[52.5 157.5]	[52.5 172.5];
            [37.5 -172.5]	[37.5 -157.5]	[37.5 -142.5]	[37.5 -127.5]	[37.5 -112.5]	[37.5 -97.5]	[37.5 -82.5]	[37.5 -67.5]	[37.5 -52.5]	[37.5 -37.5]	[37.5 -22.5]	[37.5 -7.50]	[37.5 7.50]		[37.5 22.5]		[37.5 37.5]		[37.5 52.5]		[37.5 67.5]		[37.5 82.5]		[37.5 97.5]		[37.5 112.5]	[37.5 127.5]	[37.5 142.5]	[37.5 157.5]	[37.5 172.5];
            [22.5 -172.5]	[22.5 -157.5]	[22.5 -142.5]	[22.5 -127.5]	[22.5 -112.5]	[22.5 -97.5]	[22.5 -82.5]	[22.5 -67.5]	[22.5 -52.5]	[22.5 -37.5]	[22.5 -22.5]	[22.5 -7.50]	[22.5 7.50]		[22.5 22.5]		[22.5 37.5]		[22.5 52.5]		[22.5 67.5]		[22.5 82.5]		[22.5 97.5]		[22.5 112.5]	[22.5 127.5]	[22.5 142.5]	[22.5 157.5]	[22.5 172.5];
            [7.50 -172.5]	[7.50 -157.5]	[7.50 -142.5]	[7.50 -127.5]	[7.50 -112.5]	[7.50 -97.5]	[7.50 -82.5]	[7.50 -67.5]	[7.50 -52.5]	[7.50 -37.5]	[7.50 -22.5]	[7.50 -7.50]	[7.50 7.50]		[7.50 22.5]		[7.50 37.5]		[7.50 52.5]		[7.50 67.5]		[7.50 82.5]		[7.50 97.5]		[7.50 112.5]	[7.50 127.5]	[7.50 142.5]	[7.50 157.5]	[7.50 172.5];
            [-7.50 -172.5]	[-7.50 -157.5]	[-7.50 -142.5]	[-7.50 -127.5]	[-7.50 -112.5]	[-7.50 -97.5]	[-7.50 -82.5]	[-7.50 -67.5]	[-7.50 -52.5]	[-7.50 -37.5]	[-7.50 -22.5]	[-7.50 -7.50]	[-7.50 7.50]	[-7.50 22.5]	[-7.50 37.5]	[-7.50 52.5]	[-7.50 67.5]	[-7.50 82.5]	[-7.50 97.5]	[-7.50 112.5]	[-7.50 127.5]	[-7.50 142.5]	[-7.50 157.5]	[-7.50 172.5];
            [-22.5 -172.5]	[-22.5 -157.5]	[-22.5 -142.5]	[-22.5 -127.5]	[-22.5 -112.5]	[-22.5 -97.5]	[-22.5 -82.5]	[-22.5 -67.5]	[-22.5 -52.5]	[-22.5 -37.5]	[-22.5 -22.5]	[-22.5 -7.50]	[-22.5 7.50]	[-22.5 22.5]	[-22.5 37.5]	[-22.5 52.5]	[-22.5 67.5]	[-22.5 82.5]	[-22.5 97.5]	[-22.5 112.5]	[-22.5 127.5]	[-22.5 142.5]	[-22.5 157.5]	[-22.5 172.5];
            [-37.5 -172.5]	[-37.5 -157.5]	[-37.5 -142.5]	[-37.5 -127.5]	[-37.5 -112.5]	[-37.5 -97.5]	[-37.5 -82.5]	[-37.5 -67.5]	[-37.5 -52.5]	[-37.5 -37.5]	[-37.5 -22.5]	[-37.5 -7.50]	[-37.5 7.50]	[-37.5 22.5]	[-37.5 37.5]	[-37.5 52.5]	[-37.5 67.5]	[-37.5 82.5]	[-37.5 97.5]	[-37.5 112.5]	[-37.5 127.5]	[-37.5 142.5]	[-37.5 157.5]	[-37.5 172.5];
            [-52.5 -172.5]	[-52.5 -157.5]	[-52.5 -142.5]	[-52.5 -127.5]	[-52.5 -112.5]	[-52.5 -97.5]	[-52.5 -82.5]	[-52.5 -67.5]	[-52.5 -52.5]	[-52.5 -37.5]	[-52.5 -22.5]	[-52.5 -7.50]	[-52.5 7.50]	[-52.5 22.5]	[-52.5 37.5]	[-52.5 52.5]	[-52.5 67.5]	[-52.5 82.5]	[-52.5 97.5]	[-52.5 112.5]	[-52.5 127.5]	[-52.5 142.5]	[-52.5 157.5]	[-52.5 172.5];
            [-67.5 -172.5]	[-67.5 -157.5]	[-67.5 -142.5]	[-67.5 -127.5]	[-67.5 -112.5]	[-67.5 -97.5]	[-67.5 -82.5]	[-67.5 -67.5]	[-67.5 -52.5]	[-67.5 -37.5]	[-67.5 -22.5]	[-67.5 -7.50]	[-67.5 7.50]	[-67.5 22.5]	[-67.5 37.5]	[-67.5 52.5]	[-67.5 67.5]	[-67.5 82.5]	[-67.5 97.5]	[-67.5 112.5]	[-67.5 127.5]	[-67.5 142.5]	[-67.5 157.5]	[-67.5 172.5];
            [-82.5 -172.5]	[-82.5 -157.5]	[-82.5 -142.5]	[-82.5 -127.5]	[-82.5 -112.5]	[-82.5 -97.5]	[-82.5 -82.5]	[-82.5 -67.5]	[-82.5 -52.5]	[-82.5 -37.5]	[-82.5 -22.5]	[-82.5 -7.50]	[-82.5 7.50]	[-82.5 22.5]	[-82.5 37.5]	[-82.5 52.5]	[-82.5 67.5]	[-82.5 82.5]	[-82.5 97.5]	[-82.5 112.5]	[-82.5 127.5]	[-82.5 142.5]	[-82.5 157.5]	[-82.5 172.5];
            };                        
            % Flow between continents
Flow = zeros(max(obj.Continents(:))); 

% Zone IDs with traffic
obj.ZoneId = find(obj.HostDensity > 0);

% Traffic requirements between zones
totalZones = size(obj.ZoneId, 1);
obj.TrafficMatrix = zeros(totalZones);
for i = 1:totalZones   
    for j = 1:totalZones
        if i ~= j
            obj.TrafficMatrix(i, j) = (((obj.UserDensity(obj.ZoneId(i)))...
                .*(obj.HostDensity(obj.ZoneId(j)))).^ 0.5)./...
                (((distance(obj.LatLong{obj.ZoneId(i)}, obj.LatLong{obj.ZoneId(j)})))^1.5);            
              
            % Origin continent
            OriginContinent = obj.Continents(obj.ZoneId(i));
            
            % Destination continent
            DestinationContinent = obj.Continents(obj.ZoneId(j)); 
            Flow(OriginContinent, DestinationContinent) = Flow(OriginContinent, DestinationContinent) + obj.TrafficMatrix(i, j); 
        end
    end
end           

% Flow between continents
obj.Flow = zeros(max(obj.Continents(:))); 
for k = 1 : max(obj.Continents(:)) 
    obj.Flow(k, :) = Flow(k, :) / sum(Flow(k, :));
end

% User activity per hour
obj.HourlyActivity = [0.5 0.5 0.5 0.5 0.5 1 3.1 3.5 8.5 10.6 10.5 9.5 7.6 6.5 7.5 8.1 7 4.5 2.5 2 1.5 1 1.1 1];

end           

function obj = set.Continents(obj, val)
    obj.Continents = val;
end 

function obj = set.ContinentsHosts(obj, val)
    obj.ContinentsHosts = val;
end         

function obj = set.UserDensity(obj, val)
    obj.UserDensity = val;
end         

function obj = set.HostDensity(obj, val)
    obj.HostDensity = val;
end 

function obj = set.LatLong(obj, val)
    obj.LatLong = val;
end     

function obj = set.TrafficMatrix(obj, val)
    obj.TrafficMatrix = val;
end 

function obj = set.Flow(obj, val)
    obj.Flow = val;
end 

function obj = set.ZoneId(obj, val)
    obj.ZoneId = val;
end               
end  
end
